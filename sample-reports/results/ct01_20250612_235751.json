{
  "test_run_id": "config_driven_qwen2_5_coder_7b_coding_20250612_235751",
  "timestamp": "2025-06-12T23:58:06-04:00",
  "model": {
    "name": "qwen2.5-coder:7b",
    "version": "qwen2.5-coder:7b",
    "type": "user_selected"
  },
  "test_case": {
    "id": "ct01",
    "title": "Binary Search Implementation",
    "description": "Binary Search Implementation",
    "category": "coding"
  },
  "input": {
    "prompt": "Implement a binary search function in Python that: 1. Takes a sorted list and target value as parameters 2. Returns the index of the target if found, -1 if not found 3. Uses the standard binary search algorithm (O(log n) complexity) 4. Includes proper error handling for edge cases 5. Add docstring with complexity analysis and examples. Please provide a complete, well-documented implementation.\n",
    "token_count": 63
  },
  "output": {
    "content": "\u001b[?2026h\u001b[?25l\u001b[1G⠙ \u001b[K\u001b[?25h\u001b[?2026l\u001b[?2026h\u001b[?25l\u001b[1G⠹ \u001b[K\u001b[?25h\u001b[?2026l\u001b[?2026h\u001b[?25l\u001b[1G⠹ \u001b[K\u001b[?25h\u001b[?2026l\u001b[?2026h\u001b[?25l\u001b[1G⠸ \u001b[K\u001b[?25h\u001b[?2026l\u001b[?2026h\u001b[?25l\u001b[1G⠴ \u001b[K\u001b[?25h\u001b[?2026l\u001b[?2026h\u001b[?25l\u001b[1G⠴ \u001b[K\u001b[?25h\u001b[?2026l\u001b[?2026h\u001b[?25l\u001b[1G⠦ \u001b[K\u001b[?25h\u001b[?2026l\u001b[?2026h\u001b[?25l\u001b[1G⠇ \u001b[K\u001b[?25h\u001b[?2026l\u001b[?2026h\u001b[?25l\u001b[1G⠇ \u001b[K\u001b[?25h\u001b[?2026l\u001b[?2026h\u001b[?25l\u001b[1G⠋ \u001b[K\u001b[?25h\u001b[?2026l\u001b[?2026h\u001b[?25l\u001b[1G⠙ \u001b[K\u001b[?25h\u001b[?2026l\u001b[?2026h\u001b[?25l\u001b[1G⠹ \u001b[K\u001b[?25h\u001b[?2026l\u001b[?2026h\u001b[?25l\u001b[1G⠸ \u001b[K\u001b[?25h\u001b[?2026l\u001b[?2026h\u001b[?25l\u001b[1G⠼ \u001b[K\u001b[?25h\u001b[?2026l\u001b[?2026h\u001b[?25l\u001b[1G⠴ \u001b[K\u001b[?25h\u001b[?2026l\u001b[?2026h\u001b[?25l\u001b[1G⠦ \u001b[K\u001b[?25h\u001b[?2026l\u001b[?2026h\u001b[?25l\u001b[1G⠧ \u001b[K\u001b[?25h\u001b[?2026l\u001b[?2026h\u001b[?25l\u001b[1G⠇ \u001b[K\u001b[?25h\u001b[?2026l\u001b[?2026h\u001b[?25l\u001b[1G⠏ \u001b[K\u001b[?25h\u001b[?2026l\u001b[?2026h\u001b[?25l\u001b[1G⠋ \u001b[K\u001b[?25h\u001b[?2026l\u001b[?25l\u001b[?2026h\u001b[?25l\u001b[1G\u001b[K\u001b[?25h\u001b[?2026l\u001b[2K\u001b[1G\u001b[?25h```\u001b[?25l\u001b[?25hpython\u001b[?25l\u001b[?25h\n\u001b[?25l\u001b[?25hdef\u001b[?25l\u001b[?25h binary\u001b[?25l\u001b[?25h_search\u001b[?25l\u001b[?25h(sorted\u001b[?25l\u001b[?25h_list\u001b[?25l\u001b[?25h,\u001b[?25l\u001b[?25h target\u001b[?25l\u001b[?25h):\n\u001b[?25l\u001b[?25h   \u001b[?25l\u001b[?25h \"\"\"\n\u001b[?25l\u001b[?25h   \u001b[?25l\u001b[?25h Perform\u001b[?25l\u001b[?25h a\u001b[?25l\u001b[?25h binary\u001b[?25l\u001b[?25h search\u001b[?25l\u001b[?25h on\u001b[?25l\u001b[?25h a\u001b[?25l\u001b[?25h sorted\u001b[?25l\u001b[?25h list\u001b[?25l\u001b[?25h to\u001b[?25l\u001b[?25h find\u001b[?25l\u001b[?25h the\u001b[?25l\u001b[?25h index\u001b[?25l\u001b[?25h of\u001b[?25l\u001b[?25h a\u001b[?25l\u001b[?25h given\u001b[?25l\u001b[?25h target\u001b[?25l\u001b[?25h value\u001b[?25l\u001b[?25h.\n\u001b[?25l\u001b[?25h    \n\u001b[?25l\u001b[?25h   \u001b[?25l\u001b[?25h Parameters\u001b[?25l\u001b[?25h:\n\u001b[?25l\u001b[?25h   \u001b[?25l\u001b[?25h -\u001b[?25l\u001b[?25h sorted\u001b[?25l\u001b[?25h_list\u001b[?25l\u001b[?25h:\u001b[?25l\u001b[?25h A\u001b[?25l\u001b[?25h list\u001b[?25l\u001b[?25h of\u001b[?25l\u001b[?25h elements\u001b[?25l\u001b[?25h sorted\u001b[?25l\u001b[?25h in\u001b[?25l\u001b[?25h ascending\u001b[?25l\u001b[?25h order\u001b[?25l\u001b[?25h.\n\u001b[?25l\u001b[?25h   \u001b[?25l\u001b[?25h -\u001b[?25l\u001b[?25h target\u001b[?25l\u001b[?25h:\u001b[?25l\u001b[?25h The\u001b[?25l\u001b[?25h element\u001b[?25l\u001b[?25h to\u001b[?25l\u001b[?25h be\u001b[?25l\u001b[?25h searched\u001b[?25l\u001b[?25h for\u001b[?25l\u001b[?25h within\u001b[?25l\u001b[?25h the\u001b[?25l\u001b[?25h sorted\u001b[?25l\u001b[?25h_list\u001b[?25l\u001b[?25h.\n\u001b[?25l\u001b[?25h    \n\u001b[?25l\u001b[?25h   \u001b[?25l\u001b[?25h Returns\u001b[?25l\u001b[?25h:\n\u001b[?25l\u001b[?25h   \u001b[?25l\u001b[?25h -\u001b[?25l\u001b[?25h The\u001b[?25l\u001b[?25h index\u001b[?25l\u001b[?25h of\u001b[?25l\u001b[?25h the\u001b[?25l\u001b[?25h target\u001b[?25l\u001b[?25h if\u001b[?25l\u001b[?25h found\u001b[?25l\u001b[?25h,\u001b[?25l\u001b[?25h otherwise\u001b[?25l\u001b[?25h -\u001b[?25l\u001b[?25h1\u001b[?25l\u001b[?25h.\n\u001b[?25l\u001b[?25h    \n\u001b[?25l\u001b[?25h   \u001b[?25l\u001b[?25h Complexity\u001b[?25l\u001b[?25h Analysis\u001b[?25l\u001b[?25h:\n\u001b[?25l\u001b[?25h   \u001b[?25l\u001b[?25h -\u001b[?25l\u001b[?25h Best\u001b[?25l\u001b[?25h Case\u001b[?25l\u001b[?25h Time\u001b[?25l\u001b[?25h Complexity\u001b[?25l\u001b[?25h:\u001b[?25l\u001b[?25h O\u001b[?25l\u001b[?25h(\u001b[?25l\u001b[?25h1\u001b[?25l\u001b[?25h)\u001b[?25l\u001b[?25h when\u001b[?25l\u001b[?25h the\u001b[?25l\u001b[?25h target\u001b[?25l\u001b[?25h is\u001b[?25l\u001b[?25h at\u001b[?25l\u001b[?25h the\u001b[?25l\u001b[?25h middle\u001b[?25l\u001b[?25h of\u001b[?25l\u001b[?25h the\u001b[?25l\u001b[?25h list\u001b[?25l\u001b[?25h.\n\u001b[?25l\u001b[?25h   \u001b[?25l\u001b[?25h -\u001b[?25l\u001b[?25h Average\u001b[?25l\u001b[?25h and\u001b[?25l\u001b[?25h Worst\u001b[?25l\u001b[?25h Case\u001b[?25l\u001b[?25h Time\u001b[?25l\u001b[?25h Complexity\u001b[?25l\u001b[?25h:\u001b[?25l\u001b[?25h O\u001b[?25l\u001b[?25h(log\u001b[?25l\u001b[?25h n\u001b[?25l\u001b[?25h),\u001b[?25l\u001b[?25h where\u001b[?25l\u001b[?25h '\u001b[?25l\u001b[?25hn\u001b[?25l\u001b[?25h'\u001b[?25l\u001b[?25h is\u001b[?25l\u001b[?25h the\u001b[?25l\u001b[?25h number\u001b[?25l\u001b[?25h of\u001b[?25l\u001b[?25h elements\u001b[?25l\u001b[?25h in\u001b[?25l\u001b[?25h the\u001b[?25l\u001b[?25h list\u001b[?25l\u001b[?25h.\n\u001b[?25l\u001b[?25h    \n\u001b[?25l\u001b[?25h   \u001b[?25l\u001b[?25h Examples\u001b[?25l\u001b[?25h:\n\u001b[?25l\u001b[?25h   \u001b[?25l\u001b[?25h >>>\u001b[?25l\u001b[?25h binary\u001b[?25l\u001b[?25h_search\u001b[?25l\u001b[?25h([\u001b[?25l\u001b[?25h1\u001b[?25l\u001b[?25h,\u001b[?25l\u001b[?25h \u001b[?25l\u001b[?25h2\u001b[?25l\u001b[?25h,\u001b[?25l\u001b[?25h \u001b[?25l\u001b[?25h3\u001b[?25l\u001b[?25h,\u001b[?25l\u001b[?25h \u001b[?25l\u001b[?25h4\u001b[?25l\u001b[?25h,\u001b[?25l\u001b[?25h \u001b[?25l\u001b[?25h5\u001b[?25l\u001b[?25h],\u001b[?25l\u001b[?25h \u001b[?25l\u001b[?25h3\u001b[?25l\u001b[?25h)\n\u001b[?25l\u001b[?25h   \u001b[?25l\u001b[?25h \u001b[?25l\u001b[?25h2\u001b[?25l\u001b[?25h\n\u001b[?25l\u001b[?25h   \u001b[?25l\u001b[?25h >>>\u001b[?25l\u001b[?25h binary\u001b[?25l\u001b[?25h_search\u001b[?25l\u001b[?25h([\u001b[?25l\u001b[?25h1\u001b[?25l\u001b[?25h,\u001b[?25l\u001b[?25h \u001b[?25l\u001b[?25h2\u001b[?25l\u001b[?25h,\u001b[?25l\u001b[?25h \u001b[?25l\u001b[?25h3\u001b[?25l\u001b[?25h,\u001b[?25l\u001b[?25h \u001b[?25l\u001b[?25h4\u001b[?25l\u001b[?25h,\u001b[?25l\u001b[?25h \u001b[?25l\u001b[?25h5\u001b[?25l\u001b[?25h],\u001b[?25l\u001b[?25h \u001b[?25l\u001b[?25h6\u001b[?25l\u001b[?25h)\n\u001b[?25l\u001b[?25h   \u001b[?25l\u001b[?25h -\u001b[?25l\u001b[?25h1\u001b[?25l\u001b[?25h\n\u001b[?25l\u001b[?25h   \u001b[?25l\u001b[?25h \"\"\"\n\u001b[?25l\u001b[?25h   \u001b[?25l\u001b[?25h #\u001b[?25l\u001b[?25h Check\u001b[?25l\u001b[?25h if\u001b[?25l\u001b[?25h the\u001b[?25l\u001b[?25h list\u001b[?25l\u001b[?25h is\u001b[?25l\u001b[?25h empty\u001b[?25l\u001b[?25h\n\u001b[?25l\u001b[?25h   \u001b[?25l\u001b[?25h if\u001b[?25l\u001b[?25h not\u001b[?25l\u001b[?25h sorted\u001b[?25l\u001b[?25h_list\u001b[?25l\u001b[?25h:\n\u001b[?25l\u001b[?25h       \u001b[?25l\u001b[?25h raise\u001b[?25l\u001b[?25h ValueError\u001b[?25l\u001b[?25h(\"\u001b[?25l\u001b[?25hThe\u001b[?25l\u001b[?25h input\u001b[?25l\u001b[?25h list\u001b[?25l\u001b[?25h must\u001b[?25l\u001b[?25h not\u001b[?25l\u001b[?25h be\u001b[?25l\u001b[?25h empty\u001b[?25l\u001b[?25h.\")\n\u001b[?25l\u001b[?25h    \n\u001b[?25l\u001b[?25h   \u001b[?25l\u001b[?25h left\u001b[?25l\u001b[?25h,\u001b[?25l\u001b[?25h right\u001b[?25l\u001b[?25h =\u001b[?25l\u001b[?25h \u001b[?25l\u001b[?25h0\u001b[?25l\u001b[?25h,\u001b[?25l\u001b[?25h len\u001b[?25l\u001b[?25h(sorted\u001b[?25l\u001b[?25h_list\u001b[?25l\u001b[?25h)\u001b[?25l\u001b[?25h -\u001b[?25l\u001b[?25h \u001b[?25l\u001b[?25h1\u001b[?25l\u001b[?25h\n    \n\u001b[?25l\u001b[?25h   \u001b[?25l\u001b[?25h while\u001b[?25l\u001b[?25h left\u001b[?25l\u001b[?25h <=\u001b[?25l\u001b[?25h right\u001b[?25l\u001b[?25h:\n\u001b[?25l\u001b[?25h       \u001b[?25l\u001b[?25h mid\u001b[?25l\u001b[?25h =\u001b[?25l\u001b[?25h (\u001b[?25l\u001b[?25hleft\u001b[?25l\u001b[?25h +\u001b[?25l\u001b[?25h right\u001b[?25l\u001b[?25h)\u001b[?25l\u001b[?25h //\u001b[?25l\u001b[?25h \u001b[?25l\u001b[?25h2\u001b[?25l\u001b[?25h\n\u001b[?25l\u001b[?25h       \u001b[?25l\u001b[?25h if\u001b[?25l\u001b[?25h sorted\u001b[?25l\u001b[?25h_list\u001b[?25l\u001b[?25h[mid\u001b[?25l\u001b[?25h]\u001b[?25l\u001b[?25h ==\u001b[?25l\u001b[?25h target\u001b[?25l\u001b[?25h:\n\u001b[?25l\u001b[?25h           \u001b[?25l\u001b[?25h return\u001b[?25l\u001b[?25h mid\u001b[?25l\u001b[?25h\n\u001b[?25l\u001b[?25h       \u001b[?25l\u001b[?25h elif\u001b[?25l\u001b[?25h sorted\u001b[?25l\u001b[?25h_list\u001b[?25l\u001b[?25h[mid\u001b[?25l\u001b[?25h]\u001b[?25l\u001b[?25h <\u001b[?25l\u001b[?25h target\u001b[?25l\u001b[?25h:\n\u001b[?25l\u001b[?25h           \u001b[?25l\u001b[?25h left\u001b[?25l\u001b[?25h =\u001b[?25l\u001b[?25h mid\u001b[?25l\u001b[?25h +\u001b[?25l\u001b[?25h \u001b[?25l\u001b[?25h1\u001b[?25l\u001b[?25h\n\u001b[?25l\u001b[?25h       \u001b[?25l\u001b[?25h else\u001b[?25l\u001b[?25h:\n\u001b[?25l\u001b[?25h           \u001b[?25l\u001b[?25h right\u001b[?25l\u001b[?25h =\u001b[?25l\u001b[?25h mid\u001b[?25l\u001b[?25h -\u001b[?25l\u001b[?25h \u001b[?25l\u001b[?25h1\u001b[?25l\u001b[?25h\n            \n\u001b[?25l\u001b[?25h   \u001b[?25l\u001b[?25h return\u001b[?25l\u001b[?25h -\u001b[?25l\u001b[?25h1\u001b[?25l\u001b[?25h\n\n\u001b[?25l\u001b[?25h#\u001b[?25l\u001b[?25h Example\u001b[?25l\u001b[?25h usage\u001b[?25l\u001b[?25h:\n\u001b[?25l\u001b[?25hif\u001b[?25l\u001b[?25h __\u001b[?25l\u001b[?25hname\u001b[?25l\u001b[?25h__\u001b[?25l\u001b[?25h ==\u001b[?25l\u001b[?25h \"__\u001b[?25l\u001b[?25hmain\u001b[?25l\u001b[?25h__\":\n\u001b[?25l\u001b[?25h   \u001b[?25l\u001b[?25h example\u001b[?25l\u001b[?25h_list\u001b[?25l\u001b[?25h =\u001b[?25l\u001b[?25h [\u001b[?25l\u001b[?25h1\u001b[?25l\u001b[?25h,\u001b[?25l\u001b[?25h \u001b[?25l\u001b[?25h2\u001b[?25l\u001b[?25h,\u001b[?25l\u001b[?25h \u001b[?25l\u001b[?25h3\u001b[?25l\u001b[?25h,\u001b[?25l\u001b[?25h \u001b[?25l\u001b[?25h4\u001b[?25l\u001b[?25h,\u001b[?25l\u001b[?25h \u001b[?25l\u001b[?25h5\u001b[?25l\u001b[?25h]\n\u001b[?25l\u001b[?25h   \u001b[?25l\u001b[?25h print\u001b[?25l\u001b[?25h(binary\u001b[?25l\u001b[?25h_search\u001b[?25l\u001b[?25h(example\u001b[?25l\u001b[?25h_list\u001b[?25l\u001b[?25h,\u001b[?25l\u001b[?25h \u001b[?25l\u001b[?25h3\u001b[?25l\u001b[?25h))\u001b[?25l\u001b[?25h \u001b[?25l\u001b[?25h #\u001b[?25l\u001b[?25h Output\u001b[?25l\u001b[?25h:\u001b[?25l\u001b[?25h \u001b[?25l\u001b[?25h2\u001b[?25l\u001b[?25h\n\u001b[?25l\u001b[?25h   \u001b[?25l\u001b[?25h print\u001b[?25l\u001b[?25h(binary\u001b[?25l\u001b[?25h_search\u001b[?25l\u001b[?25h(example\u001b[?25l\u001b[?25h_list\u001b[?25l\u001b[?25h,\u001b[?25l\u001b[?25h \u001b[?25l\u001b[?25h6\u001b[?25l\u001b[?25h))\u001b[?25l\u001b[?25h \u001b[?25l\u001b[?25h #\u001b[?25l\u001b[?25h Output\u001b[?25l\u001b[?25h:\u001b[?25l\u001b[?25h -\u001b[?25l\u001b[?25h1\u001b[?25l\u001b[?25h\n\u001b[?25l\u001b[?25h``\u001b[?25l\u001b[?25h`\n\n\u001b[?25l\u001b[?25hThis\u001b[?25l\u001b[?25h implementation\u001b[?25l\u001b[?25h of\u001b[?25l\u001b[?25h the\u001b[?25l\u001b[?25h binary\u001b[?25l\u001b[?25h search\u001b[?25l\u001b[?25h algorithm\u001b[?25l\u001b[?25h efficiently\u001b[?25l\u001b[?25h finds\u001b[?25l\u001b[?25h the\u001b[?25l\u001b[?25h index\u001b[?25l\u001b[?25h of\u001b[?25l\u001b[?25h a\u001b[?25l\u001b[?25h target\u001b[?25l\u001b[?25h value\u001b[?25l\u001b[?25h within\u001b[?25l\u001b[?25h a\u001b[?25l\u001b[?25h sorted\u001b[?25l\u001b[?25h list\u001b[?25l\u001b[?25h using\u001b[?25l\u001b[?25h the\u001b[?25l\u001b[?25h divide\u001b[?25l\u001b[?25h and\u001b[?25l\u001b[?25h conquer\u001b[?25l\u001b[?25h approach\u001b[?25l\u001b[?25h.\u001b[?25l\u001b[?25h The\u001b[?25l\u001b[?25h function\u001b[?25l\u001b[?25h includes\u001b[?25l\u001b[?25h error\u001b[?25l\u001b[?25h handling\u001b[?25l\u001b[?25h for\u001b[?25l\u001b[?25h an\u001b[?25l\u001b[?25h empty\u001b[?25l\u001b[?25h input\u001b[?25l\u001b[?25h list\u001b[?25l\u001b[?25h and\u001b[?25l\u001b[?25h provides\u001b[?25l\u001b[?25h a\u001b[?25l\u001b[?25h clear\u001b[?25l\u001b[?25h doc\u001b[?25l\u001b[?25hstring\u001b[?25l\u001b[?25h with\u001b[?25l\u001b[?25h complexity\u001b[?25l\u001b[?25h analysis\u001b[?25l\u001b[?25h and\u001b[?25l\u001b[?25h examples\u001b[?25l\u001b[?25h to\u001b[?25l\u001b[?25h illustrate\u001b[?25l\u001b[?25h its\u001b[?25l\u001b[?25h usage\u001b[?25l\u001b[?25h and\u001b[?25l\u001b[?25h expected\u001b[?25l\u001b[?25h outcomes\u001b[?25l\u001b[?25h.\u001b[?25l\u001b[?25h\n\n\u001b[?25l\u001b[?25h",
    "token_count": 358
  },
  "metrics": {
    "quantitative": {
      "latency_ms": 11332.042000000,
      "tokens_per_second": 31.59,
      "total_tokens": 421
    },
    "qualitative": {
      "correctness": {
        "score": "pending_manual_review"
      },
      "completeness": {
        "score": "pending_manual_review"
      },
      "quality": {
        "score": "pending_manual_review"
      }
    }
  },
  "overall_result": "pass",
  "notes": "Generic test execution completed. Manual evaluation required for qualitative metrics."
}
